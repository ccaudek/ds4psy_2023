Traceback (most recent call last):
  File "/Users/corrado/opt/anaconda3/envs/pymc_env/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/corrado/opt/anaconda3/envs/pymc_env/lib/python3.11/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/corrado/opt/anaconda3/envs/pymc_env/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/corrado/opt/anaconda3/envs/pymc_env/lib/python3.11/asyncio/base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/corrado/opt/anaconda3/envs/pymc_env/lib/python3.11/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/Users/corrado/opt/anaconda3/envs/pymc_env/lib/python3.11/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/corrado/opt/anaconda3/envs/pymc_env/lib/python3.11/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Set the degrees of freedom and T-value
df = 9
T = 2.48

# Generate x-values for the t-distribution plot
x = np.linspace(-6, 6, num=500)

# Generate y-values for the t-distribution plot
y = t.pdf(x, df)

# Create the figure and axis objects
fig, ax = plt.subplots(figsize=(8,6))

# Plot the t-distribution
ax.plot(x, y)

# Shade the areas outside of the critical values
ax.fill_between(x[x <= -T], y[x <= -T], 0, alpha=0.3, color='blue')
ax.fill_between(x[x >= T], y[x >= T], 0, alpha=0.3, color='blue')

# Remove the shading for the central region
ax.fill_between(x[(x >= -T) & (x <= T)], y[(x >= -T) & (x <= T)], 0, alpha=0)

# Add text labels for the critical values
ax.text(-T - 0.2, 0.04, '-T', fontsize=12)
ax.text(T - 0.2, 0.04, '+T', fontsize=12)

# Set the title and axis labels
ax.set_title(f't-Distribution with {df} Degrees of Freedom')
ax.set_xlabel('t-value')
ax.set_ylabel('Probability Density')

# Show the plot
plt.show()
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[8], line 9[0m
[1;32m      6[0m x [38;5;241m=[39m np[38;5;241m.[39mlinspace([38;5;241m-[39m[38;5;241m6[39m, [38;5;241m6[39m, num[38;5;241m=[39m[38;5;241m500[39m)
[1;32m      8[0m [38;5;66;03m# Generate y-values for the t-distribution plot[39;00m
[0;32m----> 9[0m y [38;5;241m=[39m [43mt[49m[38;5;241m.[39mpdf(x, df)
[1;32m     11[0m [38;5;66;03m# Create the figure and axis objects[39;00m
[1;32m     12[0m fig, ax [38;5;241m=[39m plt[38;5;241m.[39msubplots(figsize[38;5;241m=[39m([38;5;241m8[39m,[38;5;241m6[39m))

[0;31mNameError[0m: name 't' is not defined

